pivot_count <- read_csv("./temporal_differences_all_pivot_count.csv")
library(readr)
pivot_count <- read_csv("./temporal_differences_all_pivot_count.csv")
barplot(pivot_count,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)")
pivot_count
data_bar <- pivot_count$`Count - Component Size`
names(data_bar) <- pivot_count$`Component Size`
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)")
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y')
windowsFonts(A = windowsFont("IBM Plex Sans"))
library(extrafont)
install.packages("extrafont")
windowsFonts(A = windowsFont("IBM Plex Sans"))
extrafont
extrafont::font_import("/usr/share/fonts/TTF/IBMPlexSans-Regular.ttf")
extrafont::font_import(paths="/usr/share/fonts/TTF/IBMPlexSans-Regular.ttf")
extrafont::font_import(paths="/usr/share/fonts/TTF/")
loadfonts(device=”win”)
extrafont::loadfonts()
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans")
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0)
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,max=20)
rowSums(data_bar)
rowSums(pivot_count)
pivot_count
print(n=20)
print(n="20")
pivot_count[:25]
pivot_count[0:25]
pivot_count$`Component Size`[0:25]
data_bar <- pivot_count$`Count - Component Size`[0:19]
data_bar
rowSums(pivot_count$`Count - Component Size`[20:])
rowSums(pivot_count$`Count - Component Size`[20,])
rowSums(pivot_count$`Count - Component Size`[20:length(pivot_count)])
sum(pivot_count$`Count - Component Size`[20:length(pivot_count)])
sum(pivot_count$`Count - Component Size`[19:length(pivot_count)])
sum(pivot_count$`Count - Component Size`[19:length(pivot_count)-1])
pivot_count$`Count - Component Size`[19:length(pivot_count)]
pivot_count$`Count - Component Size`[20:length(pivot_count)]
pivot_count <- read_csv("./pivot_count_aggregated.csv")
data_bar <- pivot_count$`Count - Component Size`
names(data_bar) <- pivot_count$`Component Size`
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,max=20)
names(data_bar[20]) = "20+"
names(data_bar[19]) = "20+"
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,max=20)
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0)
data_bar
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,labels=pivot_count$`Component Size`)
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0)
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0)+xlim()
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex=0.8)
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.axis=0.8)
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8)
barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8)
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`, pos = 3, cex = 0.8)
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`, pos = 3, cex = 0.8,family="IBM Plex Sans")
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8)
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`, pos = 3, cex = 0.8,family="IBM Plex Sans")
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8)
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`, cex = 0.8,family="IBM Plex Sans")
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=1, cex = 0.8,family="IBM Plex Sans")
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=2, cex = 0.8,family="IBM Plex Sans")
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8,ylim=60000)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8,ylim=c(60000))
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8,ylim=c(0,60000))
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=2, cex = 0.8,family="IBM Plex Sans")
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=4, cex = 0.8,family="IBM Plex Sans")
par(mar=c(4,4,6,4)+.1)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=4, cex = 0.8,family="IBM Plex Sans")
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
par(c(4,4,10,4))
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
par(mar = c(4, 4, 10, 4))
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
library(poweRlaw)
d_powerlaw = poweRlaw::displ$new(data_bar)
plot(d_powerlaw)
lines(d_powerlaw,col=2)
(est = estimate_xmin(m_m))
(est = estimate_xmin(d_powerlaw))
d_powerlaw$setXmin(est)
lines(d_powerlaw,col=2)
d_powerlaw$getPars()
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
par()
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
par(4,4,4,4)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
par(mar=c(4,4,4,4))
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
fun <- function(x) 35274x**(-2.879)
fun <- function(x) (35274x**(-2.879))
fun <- function(x) {return 35274x**(-2.879)}
fun <- function(x) {return 35274*x**(-2.879)}
fun <- function(x) {return (35274*x**(-2.879))}
xs <- seq(1, 20, by=1)
res <- mapply(fun, list(xs))
matplot(xs, res, col="cornflowerblue")
xs <- seq(1, 20)
res <- mapply(fun, list(xs))
matplot(xs, res, col="cornflowerblue")
matplot(xs, res, col="cornflowerblue",type="l")
matplot(xs, res, col="cornflowerblue",type="l",lwd=2)
plot(xs, res, col="cornflowerblue",type="l",lwd=2)
lines(xs, res, col="cornflowerblue",type="l",lwd=2)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
lines(xs, res, col="cornflowerblue",type="l",lwd=2)
xs
library(ggplot2)
ggplot(data=data_bar, aes(x="Size of connected component", y="Frequency (log scale)")) +
geom_bar(stat="identity", width=0.5)
ggplot(data=pivot_count, aes(x="Size of connected component", y="Frequency (log scale)")) +
geom_bar(stat="identity", width=0.5)
ggplot(data=pivot_count, aes(x=`Connected Component Size`, y="Count - Connected Component Size" +
geom_bar(stat="identity", width=0.5)
pivot_count
pivot_count
ggplot(data=pivot_count, aes(x=`Connected Component Size`, y=`Count - Connected Component Size`)) +
geom_bar(stat="identity", width=0.5)
ggplot(data=pivot_count, aes(x=`Component Size`, y=`Count - Component Size`)) +
geom_bar(stat="identity", width=0.5)
ggplot(data=pivot_count, aes(x=`Component Size`, y=`Count - Component Size`)) +
geom_bar(stat="identity", width=0.5,space=0)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
xs <- bp
res <- mapply(fun, list(xs))
lines(xs, res, col="cornflowerblue",type="l",lwd=2)
lines(xs, res, col="cornflowerblue",type="l",lwd=2,log='y')
fun <- function(x) {return log(35274x**(-2.879))}
fun <- function(x) {return log(35274x**(-2.879))}
fun <- function(x) {return (log(35274x**(-2.879)))}
fun <- function(x) {return (log10(35274x**(-2.879)))}
fun <- function(x) {return (log10(35274*x**(-2.879)))}
res <- mapply(fun, list(xs))
lines(xs, res, col="cornflowerblue",type="l",lwd=2)
xs
xs = seq(1,20)
res <- mapply(fun, list(xs))
lines(xs, res, col="cornflowerblue",type="l",lwd=2)
lines(bp, res, col="cornflowerblue",type="l",lwd=2)
fun <- function(x) {return (35274*x**(-2.879))}
fun <- function(x) {return (35274*x**(-2.879))}
res <- mapply(fun, list(xs))
lines(bp, res, col="cornflowerblue",type="l",lwd=2)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
lines(bp, res, col="cornflowerblue",type="l",lwd=2)
bp = barplot(data_bar,main="Distribution of connected component sizes across all projects",xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=0.8,cex.axis=0.8,ylim=c(1,60000))
lines(bp, res, col="cornflowerblue",type="l",lwd=2)
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,cex.names=1,cex.axis=1,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.8,cex.names=1,cex.axis=1,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,width=1.2,cex.names=1,cex.axis=1,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",space=0.5,width=1.5,cex.names=1,cex.axis=1,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans".width=1.5,cex.names=1,cex.axis=1,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",width=1.5,cex.names=1,cex.axis=1,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",width=1.5,space=0.5,cex.names=1,cex.axis=1,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",width=1.5,space=0.5,cex.names=1,cex.axis=0.9,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",width=1.5,space=0.5,cex.names=0.9,cex.axis=0.9,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",width=1.5,space=0.5,cex.names=0.8,cex.axis=0.9,ylim=c(1,60000))
bp = barplot(data_bar,xlab="Size of connected component",ylab="Frequency (log scale)",log='y',family="IBM Plex Sans",width=1.5,space=0.25,cex.names=0.8,cex.axis=0.9,ylim=c(1,60000))
lines(bp, res, col="cornflowerblue",type="l",lwd=2)
text(x = bp, y = pivot_count$`Count - Component Size`, label = pivot_count$`Count - Component Size`,pos=3, cex = 0.8,family="IBM Plex Sans")
savehistory("~/Downloads/dev/pr_dev_code/r_playgrounds/Power Law Graph.Rhistory")
